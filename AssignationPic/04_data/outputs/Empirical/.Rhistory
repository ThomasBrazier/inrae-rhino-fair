limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[10,]=c(nrow(ReprodSuccess),"Males2016Estimated",mboot,etboot,limBoot1[1],limBoot1[2])
#-------------------------------
# FEMALES
ReprodSuccessF=data.frame(FatherID=unique(assignations[which(assignations$sex=="F"),2]),
NbOffspring2013=rep(NA,length(unique(assignations[which(assignations$sex=="F"),2]))),
NbOffspring2014=rep(NA,length(unique(assignations[which(assignations$sex=="F"),2]))),
NbOffspring2015=rep(NA,length(unique(assignations[which(assignations$sex=="F"),2]))),
NbOffspring2016=rep(NA,length(unique(assignations[which(assignations$sex=="F"),2]))))
for (i in 1:nrow(ReprodSuccessF)) {
ReprodSuccessF[i,2]=length(which(assignations[,2]==ReprodSuccessF[i,1] & assignations$yearOffsp=="2013"))
ReprodSuccessF[i,3]=length(which(assignations[,2]==ReprodSuccessF[i,1] & assignations$yearOffsp=="2014"))
ReprodSuccessF[i,4]=length(which(assignations[,2]==ReprodSuccessF[i,1] & assignations$yearOffsp=="2015"))
ReprodSuccessF[i,5]=length(which(assignations[,2]==ReprodSuccessF[i,1] & assignations$yearOffsp=="2016"))
}
# Succes reproductif sur les peres echantillonnes UNIQUEMENT
ReprodSuccessSampledF=ReprodSuccessF[!grepl("e[0-9]",ReprodSuccessF[,1]),]
# BOOTSTRAP REPRODUCTIVE SUCCESS - BREEDING MALES (SAMPLED ONLY)
# YEARS 2013-2016
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessSampledF[,2:5])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[11,]=c(nrow(ReprodSuccessSampledF),"FemalesAllSampled",mboot,etboot,limBoot1[1],limBoot1[2])
# 2013
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessSampledF[,2])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[12,]=c(nrow(ReprodSuccessSampledF),"Females2013Sampled",mboot,etboot,limBoot1[1],limBoot1[2])
# 2014
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessSampledF[,3])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[13,]=c(nrow(ReprodSuccessSampledF),"Females2014Sampled",mboot,etboot,limBoot1[1],limBoot1[2])
# 2015
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessSampledF[,4])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[14,]=c(nrow(ReprodSuccessSampledF),"Females2015Sampled",mboot,etboot,limBoot1[1],limBoot1[2])
# 2016
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessSampledF[,5])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[15,]=c(nrow(ReprodSuccessSampledF),"Females2016Sampled",mboot,etboot,limBoot1[1],limBoot1[2])
# BOOTSTRAP REPRODUCTIVE SUCCESS - BREEDING MALES (SAMPLED & ESTIMATED)
# YEARS 2013-2016
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessF[,2:5])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[16,]=c(nrow(ReprodSuccessF),"FemalesAllEstimated",mboot,etboot,limBoot1[1],limBoot1[2])
# 2013
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessF[,2])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[17,]=c(nrow(ReprodSuccessF),"Females2013Estimated",mboot,etboot,limBoot1[1],limBoot1[2])
# 2014
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessF[,3])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[18,]=c(nrow(ReprodSuccessF),"Females2014Estimated",mboot,etboot,limBoot1[1],limBoot1[2])
# 2015
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessF[,4])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[19,]=c(nrow(ReprodSuccessF),"Females2015Estimated",mboot,etboot,limBoot1[1],limBoot1[2])
# 2016
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessF[,5])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[20,]=c(nrow(ReprodSuccessF),"Females2016Estimated",mboot,etboot,limBoot1[1],limBoot1[2])
return(Rsuccess)
}
#-------------------------------#
#   NOMBRE D'OFFSPRING DU MALE
#-------------------------------
Rsuccess=Rsuccess()
View(Rsuccess)
# DIRECTORIES
if (Sys.info()["sysname"]=="Darwin") {
setwd("/Volumes/Samsung_T5/INRA RHINO/R/Assignation")
source("fonctionsColony.R")
wd="/Volumes/Samsung_T5/INRA RHINO/R/Assignation/04_data/outputs/"
graphdir="/Volumes/Samsung_T5/INRA RHINO/R/Graph"
setwd(wd)
info = read.table("uniqueGenotypesWithInfo.txt", h = T)
}else {
if (Sys.info()["sysname"]=="Windows"){
setwd("E:/INRA RHINO/R/Assignation")
source("fonctionsColony.R")
wd="E:/INRA RHINO/R/Assignation/04_data/outputs/"
graphdir="E:/INRA RHINO/R/Graph"
setwd(wd)
info = read.table("uniqueGenotypesWithInfo.txt", h = T)
}
}
#-------------------------------#
#   ASSEMBLAGE DES RESULTATS
#   AVEC PERES INFERES ET GENOTYPES RECONSTRUITS PAR COLONY
#-------------------------------
# COLONY reconstruit le genotype du pere le plus probable quand il ne trouve pas de pere probable dans les peres candidats
# Cette information permet de faire certaines descriptions de la population
# Notamment le calcul du succes reproductif et de la variance du succes reproductif
assignations=AssignationWithInfos(dir="Colony79lociSansM399",runs=30,p=0.3)
#-------------------------------#
#   NOMBRE D'OFFSPRING DU MALE
#-------------------------------
Rsuccess=Rsuccess()
Rsuccess=function(){
# un data frame contenant pour chaque categorie (breeding, sampled/unsampled, male/female) :
# - effectif n
# - moyenne du succes reproductif
# - ecart type
# - IC 95%
# - annee
Rsuccess=data.frame(n=NA,year=NA,meanReproductiveSuccess=NA,SD=NA,lowerIC=NA,upperIC=NA)
# Nombre de juveniles/an par pere s'etant reproduit
# un vecteur contenant les peres et le nombre de juveniles sur chaque annee (2013-2016)
ReprodSuccess=data.frame(FatherID=unique(assignations[which(assignations$sex=="M"),2]),
NbOffspring2013=rep(NA,length(unique(assignations[which(assignations$sex=="M"),2]))),
NbOffspring2014=rep(NA,length(unique(assignations[which(assignations$sex=="M"),2]))),
NbOffspring2015=rep(NA,length(unique(assignations[which(assignations$sex=="M"),2]))),
NbOffspring2016=rep(NA,length(unique(assignations[which(assignations$sex=="M"),2]))))
for (i in 1:nrow(ReprodSuccess)) {
ReprodSuccess[i,2]=length(which(assignations[,2]==ReprodSuccess[i,1] & assignations$yearOffsp=="2013"))
ReprodSuccess[i,3]=length(which(assignations[,2]==ReprodSuccess[i,1] & assignations$yearOffsp=="2014"))
ReprodSuccess[i,4]=length(which(assignations[,2]==ReprodSuccess[i,1] & assignations$yearOffsp=="2015"))
ReprodSuccess[i,5]=length(which(assignations[,2]==ReprodSuccess[i,1] & assignations$yearOffsp=="2016"))
}
# Succes reproductif sur les peres echantillonnes UNIQUEMENT
ReprodSuccessSampled=ReprodSuccess[!grepl("e[0-9]",ReprodSuccess[,1]),]
# BOOTSTRAP REPRODUCTIVE SUCCESS - BREEDING MALES (SAMPLED ONLY)
# YEARS 2013-2016
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessSampled[,2:5])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[1,]=c(nrow(ReprodSuccessSampled),"MalesAllSampled",mboot,etboot,limBoot1[1],limBoot1[2])
# 2013
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessSampled[,2])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[2,]=c(nrow(ReprodSuccessSampled),"Males2013Sampled",mboot,etboot,limBoot1[1],limBoot1[2])
# 2014
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessSampled[,3])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[3,]=c(nrow(ReprodSuccessSampled),"Males2014Sampled",mboot,etboot,limBoot1[1],limBoot1[2])
# 2015
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessSampled[,4])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[4,]=c(nrow(ReprodSuccessSampled),"Males2015Sampled",mboot,etboot,limBoot1[1],limBoot1[2])
# 2016
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessSampled[,5])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[5,]=c(nrow(ReprodSuccessSampled),"Males2016Sampled",mboot,etboot,limBoot1[1],limBoot1[2])
# BOOTSTRAP REPRODUCTIVE SUCCESS - BREEDING MALES (SAMPLED & ESTIMATED)
# YEARS 2013-2016
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccess[,2:5])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[6,]=c(nrow(ReprodSuccess),"MalesAllEstimated",mboot,etboot,limBoot1[1],limBoot1[2])
# 2013
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccess[,2])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[7,]=c(nrow(ReprodSuccess),"Males2013Estimated",mboot,etboot,limBoot1[1],limBoot1[2])
# 2014
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccess[,3])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[8,]=c(nrow(ReprodSuccess),"Males2014Estimated",mboot,etboot,limBoot1[1],limBoot1[2])
# 2015
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccess[,4])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[9,]=c(nrow(ReprodSuccess),"Males2015Estimated",mboot,etboot,limBoot1[1],limBoot1[2])
# 2016
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccess[,5])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[10,]=c(nrow(ReprodSuccess),"Males2016Estimated",mboot,etboot,limBoot1[1],limBoot1[2])
#-------------------------------
# FEMALES
ReprodSuccessF=data.frame(FatherID=unique(assignations[which(assignations$sex=="F"),2]),
NbOffspring2013=rep(NA,length(unique(assignations[which(assignations$sex=="F"),2]))),
NbOffspring2014=rep(NA,length(unique(assignations[which(assignations$sex=="F"),2]))),
NbOffspring2015=rep(NA,length(unique(assignations[which(assignations$sex=="F"),2]))),
NbOffspring2016=rep(NA,length(unique(assignations[which(assignations$sex=="F"),2]))))
for (i in 1:nrow(ReprodSuccessF)) {
ReprodSuccessF[i,2]=length(which(assignations[,2]==ReprodSuccessF[i,1] & assignations$yearOffsp=="2013"))
ReprodSuccessF[i,3]=length(which(assignations[,2]==ReprodSuccessF[i,1] & assignations$yearOffsp=="2014"))
ReprodSuccessF[i,4]=length(which(assignations[,2]==ReprodSuccessF[i,1] & assignations$yearOffsp=="2015"))
ReprodSuccessF[i,5]=length(which(assignations[,2]==ReprodSuccessF[i,1] & assignations$yearOffsp=="2016"))
}
# Succes reproductif sur les peres echantillonnes UNIQUEMENT
ReprodSuccessSampledF=ReprodSuccessF[!grepl("e[0-9]",ReprodSuccessF[,1]),]
# BOOTSTRAP REPRODUCTIVE SUCCESS - BREEDING MALES (SAMPLED ONLY)
# YEARS 2013-2016
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessSampledF[,2:5])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[11,]=c(nrow(ReprodSuccessSampledF),"FemalesAllSampled",mboot,etboot,limBoot1[1],limBoot1[2])
# 2013
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessSampledF[,2])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[12,]=c(nrow(ReprodSuccessSampledF),"Females2013Sampled",mboot,etboot,limBoot1[1],limBoot1[2])
# 2014
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessSampledF[,3])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[13,]=c(nrow(ReprodSuccessSampledF),"Females2014Sampled",mboot,etboot,limBoot1[1],limBoot1[2])
# 2015
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessSampledF[,4])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[14,]=c(nrow(ReprodSuccessSampledF),"Females2015Sampled",mboot,etboot,limBoot1[1],limBoot1[2])
# 2016
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessSampledF[,5])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[15,]=c(nrow(ReprodSuccessSampledF),"Females2016Sampled",mboot,etboot,limBoot1[1],limBoot1[2])
# BOOTSTRAP REPRODUCTIVE SUCCESS - BREEDING MALES (SAMPLED & ESTIMATED)
# YEARS 2013-2016
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessF[,2:5])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[16,]=c(nrow(ReprodSuccessF),"FemalesAllEstimated",mboot,etboot,limBoot1[1],limBoot1[2])
# 2013
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessF[,2])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[17,]=c(nrow(ReprodSuccessF),"Females2013Estimated",mboot,etboot,limBoot1[1],limBoot1[2])
# 2014
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessF[,3])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[18,]=c(nrow(ReprodSuccessF),"Females2014Estimated",mboot,etboot,limBoot1[1],limBoot1[2])
# 2015
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessF[,4])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[19,]=c(nrow(ReprodSuccessF),"Females2015Estimated",mboot,etboot,limBoot1[1],limBoot1[2])
# 2016
boots=numeric(10000)
for (i in 1:10000){
boots[i]=mean(sample(as.vector(t(ReprodSuccessF[,5])),replace=T),na.rm=TRUE)
}
limBoot1=quantile(boots,c(.025,.975))
limBoot1
mboot=mean(boots)
mboot
meanReprodSuccess=mboot
etboot=sqrt(var(boots))
etboot
Rsuccess[20,]=c(nrow(ReprodSuccessF),"Females2016Estimated",mboot,etboot,limBoot1[1],limBoot1[2])
return(Rsuccess)
}
#-------------------------------#
#   NOMBRE D'OFFSPRING DU MALE
#-------------------------------
Rsuccess=Rsuccess()
View(Rsuccess)
View(Rsuccess)
View(Rsuccess)
596+942
View(assignations)
#-------------------------------#
#   ASSEMBLAGE DES RESULTATS
#   AVEC PERES INFERES ET GENOTYPES RECONSTRUITS PAR COLONY
#-------------------------------
# COLONY reconstruit le genotype du pere le plus probable quand il ne trouve pas de pere probable dans les peres candidats
# Cette information permet de faire certaines descriptions de la population
# Notamment le calcul du succes reproductif et de la variance du succes reproductif
assignations=AssignationWithInfos(dir="Colony79lociSansM399",runs=30,p=0.03)
